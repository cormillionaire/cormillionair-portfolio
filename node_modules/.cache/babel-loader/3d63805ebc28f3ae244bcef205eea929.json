{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cornelia\\\\projects\\\\homework\\\\cormillionair-portfolio\\\\src\\\\components\\\\ContactForm.js\";\nimport React, { useState, setState, Component } from 'react';\nimport '../styles/Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isValidEmail = email => {\n      return /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email);\n    };\n\n    this.handleBlur = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n\n      if (value.length <= 0 && name == 'name') {\n        this.setState({\n          nameError: true\n        });\n      } else {\n        this.setState({\n          nameError: false\n        });\n      }\n\n      if (value.length <= 0 || name == 'email') {\n        this.setState({\n          emailError: true\n        });\n      } else {\n        this.setState({\n          emailError: false\n        });\n\n        if (this.isValidEmail(value)) {\n          this.setState({\n            emailError: false\n          });\n        } else {\n          this.setState({\n            emailError: true\n          });\n        }\n      }\n    };\n\n    this.state = {\n      name: '',\n      nameError: false,\n      contact: '',\n      email: '',\n      emailError: false,\n      message: '',\n      messageError: false,\n      formValid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } // Getting the value and name of the input which triggered the change\n\n\n  handleFormSubmit(e) {\n    const {\n      name,\n      email,\n      message,\n      nameError,\n      emailError,\n      messageError\n    } = this.state;\n    this.setState({\n      nameError: name ? false : true\n    });\n    this.setState({\n      messageError: message ? false : true\n    });\n    this.setState({\n      emailError: email ? false : true\n    });\n\n    if (name && email && message && !nameError && !emailError && !messageError) {\n      this.setState({\n        formValid: true\n      });\n    } else {\n      this.setState({\n        formValid: false\n      });\n    }\n\n    e.preventDefault();\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      message,\n      nameError,\n      emailError,\n      messageError,\n      formValid\n    } = this.state;\n\n    if (!formValid) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-floating needs-validation\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"name\",\n              type: \"text\",\n              className: \"form-control\",\n              id: \"nameInput\",\n              placeholder: \"name\",\n              value: name,\n              onChange: handleInputChange,\n              onBlur: handleBlur,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nameInput\",\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), nameError ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger mt-2\",\n              children: \"Name is a required field.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"email\",\n              type: \"email\",\n              className: \"form-control\",\n              id: \"emailInput\",\n              placeholder: \"name@example.com\",\n              value: email,\n              onChange: handleInputChange,\n              onBlur: handleBlur,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"emailInput\",\n              children: \"email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), emailError ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger mt-2\",\n              children: \"Email is a required field and must be valid.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"message\",\n              className: \"form-control\",\n              id: \"messageInput\",\n              placeholder: \"Leave a comment here\",\n              value: message,\n              onChange: handleInputChange,\n              onBlur: handleBlur,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"messageInput\",\n              children: \"message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), messageError ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger mt-2\",\n              children: \"Message is a required field.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              type: \"submit\",\n              onClick: handleFormSubmit,\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/Cornelia/projects/homework/cormillionair-portfolio/src/components/ContactForm.js"],"names":["React","useState","setState","Component","ContactForm","constructor","props","isValidEmail","email","test","handleBlur","e","name","target","value","length","nameError","emailError","state","contact","message","messageError","formValid","handleChange","bind","handleSubmit","handleInputChange","handleFormSubmit","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { useState, setState, Component } from 'react';\r\nimport '../styles/Form.css';\r\n\r\nclass ContactForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      nameError: false,\r\n      contact: '',\r\n      email: '',\r\n      emailError: false,\r\n      message: '',\r\n      messageError: false,\r\n      formValid: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  };\r\n  isValidEmail = (email) => {\r\n    return /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email);\r\n  }\r\n\r\n  handleBlur = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({ [name]: value });\r\n    if (value.length <= 0 && (name == 'name')) {\r\n      this.setState({ nameError: true });\r\n    } else {\r\n      this.setState({ nameError: false });\r\n    }\r\n    if (value.length <= 0 || (name == 'email')) {\r\n      this.setState({ emailError: true });\r\n    } else {\r\n      this.setState({ emailError: false });\r\n      if (this.isValidEmail(value)) {\r\n        this.setState({ emailError: false });\r\n      } else {\r\n        this.setState({ emailError: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleInputChange(e){\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  // Getting the value and name of the input which triggered the change\r\n  handleFormSubmit(e) {\r\n    const { name, email, message, nameError, emailError, messageError } = this.state;\r\n\r\n    this.setState({ nameError: name ? false : true });\r\n    this.setState({ messageError: message ? false : true });\r\n    this.setState({ emailError: email ? false : true });\r\n\r\n    if (name && email && message && !nameError && !emailError && !messageError) {\r\n      this.setState({ formValid: true });\r\n    } else {\r\n      this.setState({ formValid: false });\r\n    }\r\n    e.preventDefault();\r\n  }\r\n  render () {\r\n    const { name, email, message, nameError, emailError, messageError, formValid } = this.state;\r\n    if (!formValid) {\r\n      return (\r\n        <div >\r\n          <h1>contact</h1>\r\n          <form className=\"form-floating needs-validation\">\r\n            <div className=\"form-floating mb-3\">\r\n              <input name=\"name\" type=\"text\" className=\"form-control\" id=\"nameInput\" placeholder=\"name\" value={name} onChange={handleInputChange} onBlur={handleBlur} required></input>\r\n              <label htmlFor=\"nameInput\">name</label>\r\n              {nameError\r\n                ? <div className=\"alert alert-danger mt-2\">Name is a required field.</div>\r\n                : ''\r\n              }\r\n            </div>\r\n            <div className=\"form-floating mb-3\">\r\n              <input name=\"email\" type=\"email\" className=\"form-control\" id=\"emailInput\" placeholder=\"name@example.com\" value={email} onChange={handleInputChange} onBlur={handleBlur} required></input>\r\n              <label htmlFor=\"emailInput\" >email address</label>\r\n              {emailError\r\n                ? <div className=\"alert alert-danger mt-2\">Email is a required field and must be valid.</div>\r\n                : ''\r\n              }\r\n            </div>\r\n            <div className=\"form-floating\">\r\n              <textarea name=\"message\" className=\"form-control\" id=\"messageInput\" placeholder=\"Leave a comment here\" value={message} onChange={handleInputChange} onBlur={handleBlur} required></textarea>\r\n              <label htmlFor=\"messageInput\">message</label>\r\n              {messageError\r\n                ? <div className=\"alert alert-danger mt-2\">Message is a required field.</div>\r\n                : ''\r\n              }\r\n            </div>\r\n            <div className=\"m-3\">\r\n              <button className=\"btn\" type=\"submit\" onClick={handleFormSubmit} >submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    };\r\n  };\r\n};\r\n\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}