{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cornelia\\\\projects\\\\homework\\\\cormillionair-portfolio\\\\src\\\\components\\\\ContactForm.js\";\nimport React, { useState, setState, Component } from 'react';\nimport '../../styles/Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isValidEmail = email => {\n      return /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email);\n    };\n\n    this.state = {\n      name: '',\n      nameError: false,\n      contact: '',\n      email: '',\n      emailError: false,\n      emailError2: false,\n      message: '',\n      messageError: false,\n      formValid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n  }\n\n}\n\n;\n\nhandleBlur = e => {\n  const name = e.target.name;\n  const value = e.target.value;\n  this.setState({\n    [name]: value\n  });\n\n  if (value.length <= 0 && name == 'name') {\n    this.setState({\n      nameError: true\n    });\n  } else {\n    this.setState({\n      nameError: false\n    });\n  }\n\n  if (value.length <= 0 || name == 'email') {\n    this.setState({\n      emailError: true\n    });\n  } else {\n    this.setState({\n      emailError: false\n    });\n\n    if (this.isValidEmail(value)) {\n      this.setState({\n        emailError: false\n      });\n    } else {\n      this.setState({\n        emailError: true\n      });\n    }\n  }\n};\n\nconst handleInputChange = e => {\n  this.setState({\n    [e.target.name]: e.target.value\n  });\n}; // Getting the value and name of the input which triggered the change\n\n\nconst handleFormSubmit = e => {\n  const {\n    name,\n    email,\n    message,\n    nameError,\n    emailError,\n    messageError\n  } = this.state;\n  this.setState({\n    nameError: name ? false : true\n  });\n  this.setState({\n    messageError: message ? false : true\n  });\n  this.setState({\n    emailError: email ? false : true\n  });\n\n  if (name && email && message && !nameError && !emailError && !messageError) {\n    this.setState({\n      formValid: true\n    });\n  } else {\n    this.setState({\n      formValid: false\n    });\n  }\n\n  e.preventDefault();\n};\n\nrender = () => {\n  const {\n    name,\n    email,\n    message,\n    nameError,\n    emailError,\n    messageError,\n    formValid\n  } = this.state;\n\n  if (!formValid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.div,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.headingStyle,\n        children: \"contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-floating needs-validation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            type: \"text\",\n            className: \"form-control\",\n            id: \"nameInput\",\n            placeholder: \"name\",\n            value: name,\n            onChange: handleInputChange,\n            onBlur: handleBlur,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nameInput\",\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), nameError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger mt-2\",\n            children: \"Name is a required field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"email\",\n            className: \"form-control\",\n            id: \"emailInput\",\n            placeholder: \"name@example.com\",\n            value: email,\n            onChange: handleInputChange,\n            onBlur: handleBlur,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"emailInput\",\n            children: \"email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), emailError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger mt-2\",\n            children: \"Email is a required field and must be valid.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            style: styles.textField,\n            name: \"message\",\n            className: \"form-control\",\n            id: \"messageInput\",\n            placeholder: \"Leave a comment here\",\n            value: message,\n            onChange: handleInputChange,\n            onBlur: handleBlur,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"messageInput\",\n            children: \"message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), messageError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger mt-2\",\n            children: \"Message is a required field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"submit\",\n            onClick: handleFormSubmit,\n            style: styles.submitBtn,\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n  ;\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/Cornelia/projects/homework/cormillionair-portfolio/src/components/ContactForm.js"],"names":["React","useState","setState","Component","ContactForm","constructor","props","isValidEmail","email","test","state","name","nameError","contact","emailError","emailError2","message","messageError","formValid","handleChange","bind","handleSubmit","handleBlur","e","target","value","length","handleInputChange","handleFormSubmit","preventDefault","render","styles","div","headingStyle","textField","submitBtn"],"mappings":"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","sourcesContent":["import React, { useState, setState, Component } from 'react';\r\nimport '../../styles/Form.css';\r\n\r\nclass ContactForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      nameError: false,\r\n      contact: '',\r\n      email: '',\r\n      emailError: false,\r\n      emailError2: false,\r\n      message: '',\r\n      messageError: false,\r\n      formValid: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  };\r\n  isValidEmail = (email) => {\r\n    return /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email);\r\n  }\r\n};\r\n\r\nhandleBlur = (e) => {\r\n  const name = e.target.name;\r\n  const value = e.target.value;\r\n  this.setState({ [name]: value });\r\n  if (value.length <= 0 && (name == 'name')) {\r\n    this.setState({ nameError: true });\r\n  } else {\r\n    this.setState({ nameError: false });\r\n  }\r\n  if (value.length <= 0 || (name == 'email')) {\r\n    this.setState({ emailError: true });\r\n  } else {\r\n    this.setState({ emailError: false });\r\n    if (this.isValidEmail(value)) {\r\n      this.setState({ emailError: false });\r\n    } else {\r\n      this.setState({ emailError: true });\r\n    }\r\n  }\r\n}\r\n\r\nconst handleInputChange = (e) => {\r\n  this.setState({ [e.target.name]: e.target.value });\r\n}\r\n// Getting the value and name of the input which triggered the change\r\nconst handleFormSubmit = (e) => {\r\n  const { name, email, message, nameError, emailError, messageError } = this.state;\r\n\r\n  this.setState({ nameError: name ? false : true });\r\n  this.setState({ messageError: message ? false : true });\r\n  this.setState({ emailError: email ? false : true });\r\n\r\n  if (name && email && message && !nameError && !emailError && !messageError) {\r\n    this.setState({ formValid: true });\r\n  } else {\r\n    this.setState({ formValid: false });\r\n  }\r\n  e.preventDefault();\r\n}\r\nrender = () => {\r\n  const { name, email, message, nameError, emailError, messageError, formValid } = this.state;\r\n  if (!formValid) {\r\n    return (\r\n      <div style={styles.div}>\r\n        <h1 style={styles.headingStyle}>contact</h1>\r\n        <form className=\"form-floating needs-validation\">\r\n          <div className=\"form-floating mb-3\">\r\n            <input name=\"name\" type=\"text\" className=\"form-control\" id=\"nameInput\" placeholder=\"name\" value={name} onChange={handleInputChange} onBlur={handleBlur} required></input>\r\n            <label htmlFor=\"nameInput\">name</label>\r\n            {nameError\r\n              ? <div className=\"alert alert-danger mt-2\">Name is a required field.</div>\r\n              : ''\r\n            }\r\n          </div>\r\n          <div className=\"form-floating mb-3\">\r\n            <input name=\"email\" type=\"email\" className=\"form-control\" id=\"emailInput\" placeholder=\"name@example.com\" value={email} onChange={handleInputChange} onBlur={handleBlur} required></input>\r\n            <label htmlFor=\"emailInput\" >email address</label>\r\n            {emailError\r\n              ? <div className=\"alert alert-danger mt-2\">Email is a required field and must be valid.</div>\r\n              : ''\r\n            }\r\n          </div>\r\n          <div className=\"form-floating\">\r\n            <textarea style={styles.textField} name=\"message\" className=\"form-control\" id=\"messageInput\" placeholder=\"Leave a comment here\" value={message} onChange={handleInputChange} onBlur={handleBlur} required></textarea>\r\n            <label htmlFor=\"messageInput\">message</label>\r\n            {messageError\r\n              ? <div className=\"alert alert-danger mt-2\">Message is a required field.</div>\r\n              : ''\r\n            }\r\n          </div>\r\n          <div className=\"m-3\">\r\n            <button className=\"btn\" type=\"submit\" onClick={handleFormSubmit} style={styles.submitBtn}>submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}