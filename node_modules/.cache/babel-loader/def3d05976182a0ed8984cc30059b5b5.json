{"ast":null,"code":"import React,{useState}from'react';import ProjectTile from'../ProjectTile';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles={div:{margin:\"20px\",padding:\"10px\"},headingStyle:{fontSize:'100px'}};export default function Portfolio(){var projectInfoList=[{liveLink:\"https://jstndhouk.github.io/Lazy-Layover/\",projectImg:\"../../../../images/lazy-layover-homepage.PNG\",gitHub:\"https://github.com/jstndhouk/Lazy-Layover\",handleImh:\"\",projectName:\"lazy layover\"},{liveLink:\"https://cormillionaire.github.io/Weather-Dashboard/\",projectImg:\"../../../../images/weather-api.PNG\",gitHub:\"\",handleImh:\"https://github.com/cormillionaire/Weather-Dashboard\",projectName:\"weather dashboard\"},{liveLink:\"https://wish-list-fscg.herokuapp.com/\",projectImg:\"../../../../images/NotSoSubtleSanta.PNG\",gitHub:\"\",handleImh:\"https://github.com/nandodavila/Wish-List\",projectName:\"no so subtle santa\"},{liveLink:\"https://cormillionaire.github.io/TeamProfileGenerator/dist/\",projectImg:\"../../../../images/TeamGenerator.PNG\",gitHub:\"https://github.com/cormillionaire/TeamProfileGenerator\",handleImh:\"\",projectName:\"team profile generator\"},{liveLink:\"https://corn-tech-blog.herokuapp.com/signup\",projectImg:\"../../../../images/TechBlog.PNG\",gitHub:\"https://github.com/cormillionaire/TechBlog\",handleImh:\"\",projectName:\"tech blog\"},{liveLink:\"https://cormillionaire-note-generator.herokuapp.com/\",projectImg:\"../../../../images/NoteGenerator.PNG\",gitHub:\"https://github.com/cormillionaire/NoteGenerator\",handleImh:\"\",projectName:\"note generator\"}];//jsx needs to expect an array in order to iterate through the forEach\nvar projectTiles=[];function createTile(projectInfo){return/*#__PURE__*/_jsx(ProjectTile,{projectName:projectInfo.projectName,projectImg:projectInfo.projectImg,handleImg:projectInfo.handleImg,gitHub:projectInfo.gitHub,liveLink:projectInfo.liveLink});};function createTiles(){return projectInfoList.forEach(function(projectInfo){return projectTiles.push(createTile(projectInfo));});};createTiles();return/*#__PURE__*/_jsxs(\"div\",{style:styles.div,children:[/*#__PURE__*/_jsx(\"h1\",{style:styles.headingStyle,children:\"portfolio\"}),/*#__PURE__*/_jsx(\"div\",{className:\"projects\",children:projectTiles})]});}","map":{"version":3,"sources":["C:/Users/Cornelia/projects/homework/cormillionair-portfolio/src/components/pages/Portfolio.js"],"names":["React","useState","ProjectTile","styles","div","margin","padding","headingStyle","fontSize","Portfolio","projectInfoList","liveLink","projectImg","gitHub","handleImh","projectName","projectTiles","createTile","projectInfo","handleImg","createTiles","forEach","push"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,C,wFAGA,GAAMC,CAAAA,MAAM,CAAG,CACbC,GAAG,CAAE,CACHC,MAAM,CAAE,MADL,CAEHC,OAAO,CAAE,MAFN,CADQ,CAKbC,YAAY,CAAE,CACZC,QAAQ,CAAE,OADE,CALD,CAAf,CAUA,cAAe,SAASC,CAAAA,SAAT,EAAqB,CAClC,GAAMC,CAAAA,eAAe,CACnB,CAAC,CAAEC,QAAQ,CAAE,2CAAZ,CAAyDC,UAAU,CAAE,8CAArE,CAAqHC,MAAM,CAAE,2CAA7H,CAA0KC,SAAS,CAAE,EAArL,CAAyLC,WAAW,CAAE,cAAtM,CAAD,CACA,CAAEJ,QAAQ,CAAE,qDAAZ,CAAmEC,UAAU,CAAE,oCAA/E,CAAqHC,MAAM,CAAE,EAA7H,CAAiIC,SAAS,CAAE,qDAA5I,CAAmMC,WAAW,CAAE,mBAAhN,CADA,CAEA,CAAEJ,QAAQ,CAAE,uCAAZ,CAAqDC,UAAU,CAAE,yCAAjE,CAA4GC,MAAM,CAAE,EAApH,CAAwHC,SAAS,CAAE,0CAAnI,CAA+KC,WAAW,CAAE,oBAA5L,CAFA,CAGA,CAAEJ,QAAQ,CAAE,6DAAZ,CAA2EC,UAAU,CAAE,sCAAvF,CAA+HC,MAAM,CAAE,wDAAvI,CAAiMC,SAAS,CAAE,EAA5M,CAAgNC,WAAW,CAAE,wBAA7N,CAHA,CAIA,CAAEJ,QAAQ,CAAE,6CAAZ,CAA2DC,UAAU,CAAE,iCAAvE,CAA0GC,MAAM,CAAE,4CAAlH,CAAgKC,SAAS,CAAE,EAA3K,CAA+KC,WAAW,CAAE,WAA5L,CAJA,CAKA,CAAEJ,QAAQ,CAAE,sDAAZ,CAAoEC,UAAU,CAAE,sCAAhF,CAAwHC,MAAM,CAAE,iDAAhI,CAAmLC,SAAS,CAAE,EAA9L,CAAkMC,WAAW,CAAE,gBAA/M,CALA,CADF,CAOA;AACA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,WAApB,CAAiC,CAC/B,mBAAO,KAAC,WAAD,EAAa,WAAW,CAAEA,WAAW,CAACH,WAAtC,CAAmD,UAAU,CAAEG,WAAW,CAACN,UAA3E,CAAuF,SAAS,CAAEM,WAAW,CAACC,SAA9G,CAAyH,MAAM,CAAED,WAAW,CAACL,MAA7I,CAAqJ,QAAQ,CAAEK,WAAW,CAACP,QAA3K,EAAP,CACD,EAED,QAASS,CAAAA,WAAT,EAAuB,CACrB,MAAOV,CAAAA,eAAe,CAACW,OAAhB,CAAwB,SAAAH,WAAW,QAAIF,CAAAA,YAAY,CAACM,IAAb,CAAkBL,UAAU,CAACC,WAAD,CAA5B,CAAJ,EAAnC,CAAP,CACD,EAEDE,WAAW,GACX,mBACE,aAAK,KAAK,CAAEjB,MAAM,CAACC,GAAnB,wBACE,WAAI,KAAK,CAAED,MAAM,CAACI,YAAlB,uBADF,cAEE,YAAK,SAAS,CAAC,UAAf,UACGS,YADH,EAFF,GADF,CAQD","sourcesContent":["import React, { useState } from 'react';\nimport ProjectTile from '../ProjectTile';\n\n\nconst styles = {\n  div: {\n    margin: \"20px\",\n    padding: \"10px\",\n  },\n  headingStyle: {\n    fontSize: '100px',\n  },\n};\n\nexport default function Portfolio() {\n  const projectInfoList =\n    [{ liveLink: \"https://jstndhouk.github.io/Lazy-Layover/\", projectImg: \"../../../../images/lazy-layover-homepage.PNG\", gitHub: \"https://github.com/jstndhouk/Lazy-Layover\", handleImh: \"\", projectName: \"lazy layover\"},\n    { liveLink: \"https://cormillionaire.github.io/Weather-Dashboard/\", projectImg: \"../../../../images/weather-api.PNG\", gitHub: \"\", handleImh: \"https://github.com/cormillionaire/Weather-Dashboard\", projectName: \"weather dashboard\" },\n    { liveLink: \"https://wish-list-fscg.herokuapp.com/\", projectImg: \"../../../../images/NotSoSubtleSanta.PNG\", gitHub: \"\", handleImh: \"https://github.com/nandodavila/Wish-List\", projectName: \"no so subtle santa\" },\n    { liveLink: \"https://cormillionaire.github.io/TeamProfileGenerator/dist/\", projectImg: \"../../../../images/TeamGenerator.PNG\", gitHub: \"https://github.com/cormillionaire/TeamProfileGenerator\", handleImh: \"\", projectName: \"team profile generator\" },\n    { liveLink: \"https://corn-tech-blog.herokuapp.com/signup\", projectImg: \"../../../../images/TechBlog.PNG\", gitHub: \"https://github.com/cormillionaire/TechBlog\", handleImh: \"\", projectName: \"tech blog\"  },\n    { liveLink: \"https://cormillionaire-note-generator.herokuapp.com/\", projectImg: \"../../../../images/NoteGenerator.PNG\", gitHub: \"https://github.com/cormillionaire/NoteGenerator\", handleImh: \"\", projectName: \"note generator\" }];\n  //jsx needs to expect an array in order to iterate through the forEach\n  let projectTiles = [];\n\n  function createTile(projectInfo) {\n    return <ProjectTile projectName={projectInfo.projectName} projectImg={projectInfo.projectImg} handleImg={projectInfo.handleImg} gitHub={projectInfo.gitHub} liveLink={projectInfo.liveLink} />\n  };\n\n  function createTiles() {\n    return projectInfoList.forEach(projectInfo => projectTiles.push(createTile(projectInfo)))\n  };\n\n  createTiles()\n  return (\n    <div style={styles.div}>\n      <h1 style={styles.headingStyle}>portfolio</h1>\n      <div className=\"projects\">\n        {projectTiles}\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}